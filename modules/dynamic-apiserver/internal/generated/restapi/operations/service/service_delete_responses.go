// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kuberlogic/kuberlogic/modules/dynamic-apiserver/internal/generated/models"
)

// ServiceDeleteOKCode is the HTTP code returned for type ServiceDeleteOK
const ServiceDeleteOKCode int = 200

/*ServiceDeleteOK item deleted

swagger:response serviceDeleteOK
*/
type ServiceDeleteOK struct {
}

// NewServiceDeleteOK creates ServiceDeleteOK with default headers values
func NewServiceDeleteOK() *ServiceDeleteOK {

	return &ServiceDeleteOK{}
}

// WriteResponse to the client
func (o *ServiceDeleteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// ServiceDeleteBadRequestCode is the HTTP code returned for type ServiceDeleteBadRequest
const ServiceDeleteBadRequestCode int = 400

/*ServiceDeleteBadRequest invalid input, object invalid

swagger:response serviceDeleteBadRequest
*/
type ServiceDeleteBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceDeleteBadRequest creates ServiceDeleteBadRequest with default headers values
func NewServiceDeleteBadRequest() *ServiceDeleteBadRequest {

	return &ServiceDeleteBadRequest{}
}

// WithPayload adds the payload to the service delete bad request response
func (o *ServiceDeleteBadRequest) WithPayload(payload *models.Error) *ServiceDeleteBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service delete bad request response
func (o *ServiceDeleteBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceDeleteBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceDeleteUnauthorizedCode is the HTTP code returned for type ServiceDeleteUnauthorized
const ServiceDeleteUnauthorizedCode int = 401

/*ServiceDeleteUnauthorized bad authentication

swagger:response serviceDeleteUnauthorized
*/
type ServiceDeleteUnauthorized struct {
}

// NewServiceDeleteUnauthorized creates ServiceDeleteUnauthorized with default headers values
func NewServiceDeleteUnauthorized() *ServiceDeleteUnauthorized {

	return &ServiceDeleteUnauthorized{}
}

// WriteResponse to the client
func (o *ServiceDeleteUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// ServiceDeleteForbiddenCode is the HTTP code returned for type ServiceDeleteForbidden
const ServiceDeleteForbiddenCode int = 403

/*ServiceDeleteForbidden bad permissions

swagger:response serviceDeleteForbidden
*/
type ServiceDeleteForbidden struct {
}

// NewServiceDeleteForbidden creates ServiceDeleteForbidden with default headers values
func NewServiceDeleteForbidden() *ServiceDeleteForbidden {

	return &ServiceDeleteForbidden{}
}

// WriteResponse to the client
func (o *ServiceDeleteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// ServiceDeleteNotFoundCode is the HTTP code returned for type ServiceDeleteNotFound
const ServiceDeleteNotFoundCode int = 404

/*ServiceDeleteNotFound item not found

swagger:response serviceDeleteNotFound
*/
type ServiceDeleteNotFound struct {
}

// NewServiceDeleteNotFound creates ServiceDeleteNotFound with default headers values
func NewServiceDeleteNotFound() *ServiceDeleteNotFound {

	return &ServiceDeleteNotFound{}
}

// WriteResponse to the client
func (o *ServiceDeleteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// ServiceDeleteUnprocessableEntityCode is the HTTP code returned for type ServiceDeleteUnprocessableEntity
const ServiceDeleteUnprocessableEntityCode int = 422

/*ServiceDeleteUnprocessableEntity bad validation

swagger:response serviceDeleteUnprocessableEntity
*/
type ServiceDeleteUnprocessableEntity struct {
}

// NewServiceDeleteUnprocessableEntity creates ServiceDeleteUnprocessableEntity with default headers values
func NewServiceDeleteUnprocessableEntity() *ServiceDeleteUnprocessableEntity {

	return &ServiceDeleteUnprocessableEntity{}
}

// WriteResponse to the client
func (o *ServiceDeleteUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(422)
}

// ServiceDeleteServiceUnavailableCode is the HTTP code returned for type ServiceDeleteServiceUnavailable
const ServiceDeleteServiceUnavailableCode int = 503

/*ServiceDeleteServiceUnavailable internal server error

swagger:response serviceDeleteServiceUnavailable
*/
type ServiceDeleteServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceDeleteServiceUnavailable creates ServiceDeleteServiceUnavailable with default headers values
func NewServiceDeleteServiceUnavailable() *ServiceDeleteServiceUnavailable {

	return &ServiceDeleteServiceUnavailable{}
}

// WithPayload adds the payload to the service delete service unavailable response
func (o *ServiceDeleteServiceUnavailable) WithPayload(payload *models.Error) *ServiceDeleteServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service delete service unavailable response
func (o *ServiceDeleteServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceDeleteServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
