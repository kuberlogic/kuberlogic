// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kuberlogic/operator/modules/apiserver/internal/generated/models"
)

// UserCreateCreatedCode is the HTTP code returned for type UserCreateCreated
const UserCreateCreatedCode int = 201

/*UserCreateCreated item is created

swagger:response userCreateCreated
*/
type UserCreateCreated struct {
}

// NewUserCreateCreated creates UserCreateCreated with default headers values
func NewUserCreateCreated() *UserCreateCreated {

	return &UserCreateCreated{}
}

// WriteResponse to the client
func (o *UserCreateCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// UserCreateBadRequestCode is the HTTP code returned for type UserCreateBadRequest
const UserCreateBadRequestCode int = 400

/*UserCreateBadRequest invalid input, object invalid

swagger:response userCreateBadRequest
*/
type UserCreateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUserCreateBadRequest creates UserCreateBadRequest with default headers values
func NewUserCreateBadRequest() *UserCreateBadRequest {

	return &UserCreateBadRequest{}
}

// WithPayload adds the payload to the user create bad request response
func (o *UserCreateBadRequest) WithPayload(payload *models.Error) *UserCreateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user create bad request response
func (o *UserCreateBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserCreateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UserCreateUnauthorizedCode is the HTTP code returned for type UserCreateUnauthorized
const UserCreateUnauthorizedCode int = 401

/*UserCreateUnauthorized bad authentication

swagger:response userCreateUnauthorized
*/
type UserCreateUnauthorized struct {
}

// NewUserCreateUnauthorized creates UserCreateUnauthorized with default headers values
func NewUserCreateUnauthorized() *UserCreateUnauthorized {

	return &UserCreateUnauthorized{}
}

// WriteResponse to the client
func (o *UserCreateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// UserCreateForbiddenCode is the HTTP code returned for type UserCreateForbidden
const UserCreateForbiddenCode int = 403

/*UserCreateForbidden bad permissions

swagger:response userCreateForbidden
*/
type UserCreateForbidden struct {
}

// NewUserCreateForbidden creates UserCreateForbidden with default headers values
func NewUserCreateForbidden() *UserCreateForbidden {

	return &UserCreateForbidden{}
}

// WriteResponse to the client
func (o *UserCreateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// UserCreateServiceUnavailableCode is the HTTP code returned for type UserCreateServiceUnavailable
const UserCreateServiceUnavailableCode int = 503

/*UserCreateServiceUnavailable internal server error

swagger:response userCreateServiceUnavailable
*/
type UserCreateServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUserCreateServiceUnavailable creates UserCreateServiceUnavailable with default headers values
func NewUserCreateServiceUnavailable() *UserCreateServiceUnavailable {

	return &UserCreateServiceUnavailable{}
}

// WithPayload adds the payload to the user create service unavailable response
func (o *UserCreateServiceUnavailable) WithPayload(payload *models.Error) *UserCreateServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user create service unavailable response
func (o *UserCreateServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserCreateServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
