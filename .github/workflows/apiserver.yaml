name: Apiserver unittests

on:
  pull_request:
    branches: [ master ]

  push:
    branches: [ master ]

jobs:
  unittests:
    runs-on: ubuntu-latest
    env:
      GOPATH: /tmp/go

    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16.0'

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ${{ env.GOPATH }}
          key: go-cache-${{ github.run_id }}
          restore-keys: |
            go-cache-

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          working-directory: ./modules/dynamic-apiserver

      - name: Run the tests with coverage
        working-directory: ./modules/dynamic-apiserver
        run: |
          make test

      - name: Upload coverage
        run: |
          bash <(curl -s https://codecov.io/bash) -f modules/dynamic-apiserver/cover.out -F dynamic-apiserver
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build-cli:
    if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    env:
      GOPATH: /tmp/go
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16.0'

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Build CLI
        working-directory: ./modules/dynamic-apiserver
        run: |
          make build-cli

      - name: Release CLI
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            ./modules/dynamic-apiserver/kuberlogic