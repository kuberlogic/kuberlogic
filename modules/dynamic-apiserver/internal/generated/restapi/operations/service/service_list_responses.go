// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kuberlogic/kuberlogic/modules/dynamic-apiserver/internal/generated/models"
)

// ServiceListOKCode is the HTTP code returned for type ServiceListOK
const ServiceListOKCode int = 200

/*ServiceListOK search results matching criteria

swagger:response serviceListOK
*/
type ServiceListOK struct {

	/*
	  In: Body
	*/
	Payload models.Services `json:"body,omitempty"`
}

// NewServiceListOK creates ServiceListOK with default headers values
func NewServiceListOK() *ServiceListOK {

	return &ServiceListOK{}
}

// WithPayload adds the payload to the service list o k response
func (o *ServiceListOK) WithPayload(payload models.Services) *ServiceListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service list o k response
func (o *ServiceListOK) SetPayload(payload models.Services) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.Services{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ServiceListBadRequestCode is the HTTP code returned for type ServiceListBadRequest
const ServiceListBadRequestCode int = 400

/*ServiceListBadRequest bad input parameter

swagger:response serviceListBadRequest
*/
type ServiceListBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceListBadRequest creates ServiceListBadRequest with default headers values
func NewServiceListBadRequest() *ServiceListBadRequest {

	return &ServiceListBadRequest{}
}

// WithPayload adds the payload to the service list bad request response
func (o *ServiceListBadRequest) WithPayload(payload *models.Error) *ServiceListBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service list bad request response
func (o *ServiceListBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceListBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceListUnauthorizedCode is the HTTP code returned for type ServiceListUnauthorized
const ServiceListUnauthorizedCode int = 401

/*ServiceListUnauthorized bad authentication

swagger:response serviceListUnauthorized
*/
type ServiceListUnauthorized struct {
}

// NewServiceListUnauthorized creates ServiceListUnauthorized with default headers values
func NewServiceListUnauthorized() *ServiceListUnauthorized {

	return &ServiceListUnauthorized{}
}

// WriteResponse to the client
func (o *ServiceListUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// ServiceListForbiddenCode is the HTTP code returned for type ServiceListForbidden
const ServiceListForbiddenCode int = 403

/*ServiceListForbidden bad permissions

swagger:response serviceListForbidden
*/
type ServiceListForbidden struct {
}

// NewServiceListForbidden creates ServiceListForbidden with default headers values
func NewServiceListForbidden() *ServiceListForbidden {

	return &ServiceListForbidden{}
}

// WriteResponse to the client
func (o *ServiceListForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// ServiceListUnprocessableEntityCode is the HTTP code returned for type ServiceListUnprocessableEntity
const ServiceListUnprocessableEntityCode int = 422

/*ServiceListUnprocessableEntity bad validation

swagger:response serviceListUnprocessableEntity
*/
type ServiceListUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceListUnprocessableEntity creates ServiceListUnprocessableEntity with default headers values
func NewServiceListUnprocessableEntity() *ServiceListUnprocessableEntity {

	return &ServiceListUnprocessableEntity{}
}

// WithPayload adds the payload to the service list unprocessable entity response
func (o *ServiceListUnprocessableEntity) WithPayload(payload *models.Error) *ServiceListUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service list unprocessable entity response
func (o *ServiceListUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceListUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceListServiceUnavailableCode is the HTTP code returned for type ServiceListServiceUnavailable
const ServiceListServiceUnavailableCode int = 503

/*ServiceListServiceUnavailable internal server error

swagger:response serviceListServiceUnavailable
*/
type ServiceListServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceListServiceUnavailable creates ServiceListServiceUnavailable with default headers values
func NewServiceListServiceUnavailable() *ServiceListServiceUnavailable {

	return &ServiceListServiceUnavailable{}
}

// WithPayload adds the payload to the service list service unavailable response
func (o *ServiceListServiceUnavailable) WithPayload(payload *models.Error) *ServiceListServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service list service unavailable response
func (o *ServiceListServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceListServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
