// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kuberlogic/operator/modules/apiserver/internal/generated/models"
)

// LogsGetOKCode is the HTTP code returned for type LogsGetOK
const LogsGetOKCode int = 200

/*LogsGetOK service node logs

swagger:response logsGetOK
*/
type LogsGetOK struct {

	/*
	  In: Body
	*/
	Payload *models.Log `json:"body,omitempty"`
}

// NewLogsGetOK creates LogsGetOK with default headers values
func NewLogsGetOK() *LogsGetOK {

	return &LogsGetOK{}
}

// WithPayload adds the payload to the logs get o k response
func (o *LogsGetOK) WithPayload(payload *models.Log) *LogsGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the logs get o k response
func (o *LogsGetOK) SetPayload(payload *models.Log) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LogsGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// LogsGetUnauthorizedCode is the HTTP code returned for type LogsGetUnauthorized
const LogsGetUnauthorizedCode int = 401

/*LogsGetUnauthorized bad authentication

swagger:response logsGetUnauthorized
*/
type LogsGetUnauthorized struct {
}

// NewLogsGetUnauthorized creates LogsGetUnauthorized with default headers values
func NewLogsGetUnauthorized() *LogsGetUnauthorized {

	return &LogsGetUnauthorized{}
}

// WriteResponse to the client
func (o *LogsGetUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// LogsGetForbiddenCode is the HTTP code returned for type LogsGetForbidden
const LogsGetForbiddenCode int = 403

/*LogsGetForbidden bad permissions

swagger:response logsGetForbidden
*/
type LogsGetForbidden struct {
}

// NewLogsGetForbidden creates LogsGetForbidden with default headers values
func NewLogsGetForbidden() *LogsGetForbidden {

	return &LogsGetForbidden{}
}

// WriteResponse to the client
func (o *LogsGetForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// LogsGetServiceUnavailableCode is the HTTP code returned for type LogsGetServiceUnavailable
const LogsGetServiceUnavailableCode int = 503

/*LogsGetServiceUnavailable internal server error

swagger:response logsGetServiceUnavailable
*/
type LogsGetServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewLogsGetServiceUnavailable creates LogsGetServiceUnavailable with default headers values
func NewLogsGetServiceUnavailable() *LogsGetServiceUnavailable {

	return &LogsGetServiceUnavailable{}
}

// WithPayload adds the payload to the logs get service unavailable response
func (o *LogsGetServiceUnavailable) WithPayload(payload *models.Error) *LogsGetServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the logs get service unavailable response
func (o *LogsGetServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LogsGetServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
