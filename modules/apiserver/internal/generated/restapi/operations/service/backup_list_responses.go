// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kuberlogic/operator/modules/apiserver/internal/generated/models"
)

// BackupListOKCode is the HTTP code returned for type BackupListOK
const BackupListOKCode int = 200

/*BackupListOK search results matching criteria

swagger:response backupListOK
*/
type BackupListOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Backup `json:"body,omitempty"`
}

// NewBackupListOK creates BackupListOK with default headers values
func NewBackupListOK() *BackupListOK {

	return &BackupListOK{}
}

// WithPayload adds the payload to the backup list o k response
func (o *BackupListOK) WithPayload(payload []*models.Backup) *BackupListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the backup list o k response
func (o *BackupListOK) SetPayload(payload []*models.Backup) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BackupListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Backup, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// BackupListBadRequestCode is the HTTP code returned for type BackupListBadRequest
const BackupListBadRequestCode int = 400

/*BackupListBadRequest invalid input, object invalid

swagger:response backupListBadRequest
*/
type BackupListBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBackupListBadRequest creates BackupListBadRequest with default headers values
func NewBackupListBadRequest() *BackupListBadRequest {

	return &BackupListBadRequest{}
}

// WithPayload adds the payload to the backup list bad request response
func (o *BackupListBadRequest) WithPayload(payload *models.Error) *BackupListBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the backup list bad request response
func (o *BackupListBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BackupListBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BackupListUnauthorizedCode is the HTTP code returned for type BackupListUnauthorized
const BackupListUnauthorizedCode int = 401

/*BackupListUnauthorized bad authentication

swagger:response backupListUnauthorized
*/
type BackupListUnauthorized struct {
}

// NewBackupListUnauthorized creates BackupListUnauthorized with default headers values
func NewBackupListUnauthorized() *BackupListUnauthorized {

	return &BackupListUnauthorized{}
}

// WriteResponse to the client
func (o *BackupListUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// BackupListForbiddenCode is the HTTP code returned for type BackupListForbidden
const BackupListForbiddenCode int = 403

/*BackupListForbidden bad permissions

swagger:response backupListForbidden
*/
type BackupListForbidden struct {
}

// NewBackupListForbidden creates BackupListForbidden with default headers values
func NewBackupListForbidden() *BackupListForbidden {

	return &BackupListForbidden{}
}

// WriteResponse to the client
func (o *BackupListForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// BackupListNotFoundCode is the HTTP code returned for type BackupListNotFound
const BackupListNotFoundCode int = 404

/*BackupListNotFound item not found

swagger:response backupListNotFound
*/
type BackupListNotFound struct {
}

// NewBackupListNotFound creates BackupListNotFound with default headers values
func NewBackupListNotFound() *BackupListNotFound {

	return &BackupListNotFound{}
}

// WriteResponse to the client
func (o *BackupListNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// BackupListServiceUnavailableCode is the HTTP code returned for type BackupListServiceUnavailable
const BackupListServiceUnavailableCode int = 503

/*BackupListServiceUnavailable internal server error

swagger:response backupListServiceUnavailable
*/
type BackupListServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBackupListServiceUnavailable creates BackupListServiceUnavailable with default headers values
func NewBackupListServiceUnavailable() *BackupListServiceUnavailable {

	return &BackupListServiceUnavailable{}
}

// WithPayload adds the payload to the backup list service unavailable response
func (o *BackupListServiceUnavailable) WithPayload(payload *models.Error) *BackupListServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the backup list service unavailable response
func (o *BackupListServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BackupListServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
