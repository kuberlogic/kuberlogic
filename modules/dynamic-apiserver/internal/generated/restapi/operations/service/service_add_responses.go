// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kuberlogic/kuberlogic/modules/dynamic-apiserver/internal/generated/models"
)

// ServiceAddCreatedCode is the HTTP code returned for type ServiceAddCreated
const ServiceAddCreatedCode int = 201

/*ServiceAddCreated item created

swagger:response serviceAddCreated
*/
type ServiceAddCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Service `json:"body,omitempty"`
}

// NewServiceAddCreated creates ServiceAddCreated with default headers values
func NewServiceAddCreated() *ServiceAddCreated {

	return &ServiceAddCreated{}
}

// WithPayload adds the payload to the service add created response
func (o *ServiceAddCreated) WithPayload(payload *models.Service) *ServiceAddCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service add created response
func (o *ServiceAddCreated) SetPayload(payload *models.Service) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceAddCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceAddBadRequestCode is the HTTP code returned for type ServiceAddBadRequest
const ServiceAddBadRequestCode int = 400

/*ServiceAddBadRequest invalid input, object invalid

swagger:response serviceAddBadRequest
*/
type ServiceAddBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceAddBadRequest creates ServiceAddBadRequest with default headers values
func NewServiceAddBadRequest() *ServiceAddBadRequest {

	return &ServiceAddBadRequest{}
}

// WithPayload adds the payload to the service add bad request response
func (o *ServiceAddBadRequest) WithPayload(payload *models.Error) *ServiceAddBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service add bad request response
func (o *ServiceAddBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceAddBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceAddUnauthorizedCode is the HTTP code returned for type ServiceAddUnauthorized
const ServiceAddUnauthorizedCode int = 401

/*ServiceAddUnauthorized bad authentication

swagger:response serviceAddUnauthorized
*/
type ServiceAddUnauthorized struct {
}

// NewServiceAddUnauthorized creates ServiceAddUnauthorized with default headers values
func NewServiceAddUnauthorized() *ServiceAddUnauthorized {

	return &ServiceAddUnauthorized{}
}

// WriteResponse to the client
func (o *ServiceAddUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// ServiceAddForbiddenCode is the HTTP code returned for type ServiceAddForbidden
const ServiceAddForbiddenCode int = 403

/*ServiceAddForbidden bad permissions

swagger:response serviceAddForbidden
*/
type ServiceAddForbidden struct {
}

// NewServiceAddForbidden creates ServiceAddForbidden with default headers values
func NewServiceAddForbidden() *ServiceAddForbidden {

	return &ServiceAddForbidden{}
}

// WriteResponse to the client
func (o *ServiceAddForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// ServiceAddConflictCode is the HTTP code returned for type ServiceAddConflict
const ServiceAddConflictCode int = 409

/*ServiceAddConflict item already exists

swagger:response serviceAddConflict
*/
type ServiceAddConflict struct {
}

// NewServiceAddConflict creates ServiceAddConflict with default headers values
func NewServiceAddConflict() *ServiceAddConflict {

	return &ServiceAddConflict{}
}

// WriteResponse to the client
func (o *ServiceAddConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}

// ServiceAddServiceUnavailableCode is the HTTP code returned for type ServiceAddServiceUnavailable
const ServiceAddServiceUnavailableCode int = 503

/*ServiceAddServiceUnavailable internal server error

swagger:response serviceAddServiceUnavailable
*/
type ServiceAddServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceAddServiceUnavailable creates ServiceAddServiceUnavailable with default headers values
func NewServiceAddServiceUnavailable() *ServiceAddServiceUnavailable {

	return &ServiceAddServiceUnavailable{}
}

// WithPayload adds the payload to the service add service unavailable response
func (o *ServiceAddServiceUnavailable) WithPayload(payload *models.Error) *ServiceAddServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service add service unavailable response
func (o *ServiceAddServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceAddServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
