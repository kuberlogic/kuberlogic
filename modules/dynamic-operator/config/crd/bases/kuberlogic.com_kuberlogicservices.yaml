
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: kuberlogicservices.kuberlogic.com
spec:
  group: kuberlogic.com
  names:
    categories:
    - kuberlogic
    kind: KuberLogicService
    listKind: KuberLogicServiceList
    plural: kuberlogicservices
    shortNames:
    - kls
    singular: kuberlogicservice
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Service status
      jsonPath: .status.phase
      name: Status
      type: string
    - description: The cluster type
      jsonPath: .spec.type
      name: Type
      type: string
    - description: The number of desired replicas
      jsonPath: .spec.replicas
      name: Replicas
      type: integer
    - description: CPU limits
      jsonPath: .spec.limits.cpu
      name: CPU Limits
      type: string
    - description: Memory limits
      jsonPath: .spec.limits.memory
      name: Memory Limits
      type: string
    - description: Storage limits
      jsonPath: .spec.limits.storage
      name: Storage Limits
      type: string
    - description: Access endpoint
      jsonPath: .status.access
      name: Endpoint
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              advanced:
                description: any advanced configuration is supported
                x-kubernetes-preserve-unknown-fields: true
              archived:
                default: false
                description: Service namespace is removed when it is archived
                type: boolean
              backupSchedule:
                type: string
              domain:
                pattern: '[a-z]([-a-z0-9]*[a-z0-9])?'
                type: string
              insecure:
                type: boolean
              limits:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: Resources (requests/limits)
                type: object
              paused:
                default: false
                description: Paused field allows to stop all service related containers
                type: boolean
              replicas:
                description: Amount of replicas
                format: int32
                maximum: 5
                type: integer
              type:
                description: Type of the cluster
                type: string
              useLetsencrypt:
                type: boolean
              version:
                description: '2 or 3 digits: 5 or 5.7 or 5.7.31'
                pattern: ^\d+[\.\d+]*$
                type: string
            required:
            - type
            type: object
          status:
            description: KuberLogicServiceStatus defines the observed state of KuberLogicService
            properties:
              access:
                type: string
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              namespace:
                description: namespace that contains service resources
                type: string
              phase:
                type: string
              purgeDate:
                description: date when the namespace and all related resources will
                  be purged
                type: string
              readyForRestore:
                description: a service is ready for restore process
                type: boolean
              restoreRequested:
                description: a service is about to be restored or restore is in progress
                type: boolean
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
