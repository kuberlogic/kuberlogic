// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kuberlogic/kuberlogic/modules/dynamic-apiserver/pkg/generated/models"
)

// ServiceLogsListOKCode is the HTTP code returned for type ServiceLogsListOK
const ServiceLogsListOKCode int = 200

/*ServiceLogsListOK kuberlogic service logs

swagger:response serviceLogsListOK
*/
type ServiceLogsListOK struct {

	/*
	  In: Body
	*/
	Payload models.Logs `json:"body,omitempty"`
}

// NewServiceLogsListOK creates ServiceLogsListOK with default headers values
func NewServiceLogsListOK() *ServiceLogsListOK {

	return &ServiceLogsListOK{}
}

// WithPayload adds the payload to the service logs list o k response
func (o *ServiceLogsListOK) WithPayload(payload models.Logs) *ServiceLogsListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service logs list o k response
func (o *ServiceLogsListOK) SetPayload(payload models.Logs) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceLogsListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.Logs{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ServiceLogsListBadRequestCode is the HTTP code returned for type ServiceLogsListBadRequest
const ServiceLogsListBadRequestCode int = 400

/*ServiceLogsListBadRequest bad input parameter

swagger:response serviceLogsListBadRequest
*/
type ServiceLogsListBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceLogsListBadRequest creates ServiceLogsListBadRequest with default headers values
func NewServiceLogsListBadRequest() *ServiceLogsListBadRequest {

	return &ServiceLogsListBadRequest{}
}

// WithPayload adds the payload to the service logs list bad request response
func (o *ServiceLogsListBadRequest) WithPayload(payload *models.Error) *ServiceLogsListBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service logs list bad request response
func (o *ServiceLogsListBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceLogsListBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceLogsListUnauthorizedCode is the HTTP code returned for type ServiceLogsListUnauthorized
const ServiceLogsListUnauthorizedCode int = 401

/*ServiceLogsListUnauthorized bad authentication

swagger:response serviceLogsListUnauthorized
*/
type ServiceLogsListUnauthorized struct {
}

// NewServiceLogsListUnauthorized creates ServiceLogsListUnauthorized with default headers values
func NewServiceLogsListUnauthorized() *ServiceLogsListUnauthorized {

	return &ServiceLogsListUnauthorized{}
}

// WriteResponse to the client
func (o *ServiceLogsListUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// ServiceLogsListForbiddenCode is the HTTP code returned for type ServiceLogsListForbidden
const ServiceLogsListForbiddenCode int = 403

/*ServiceLogsListForbidden bad permissions

swagger:response serviceLogsListForbidden
*/
type ServiceLogsListForbidden struct {
}

// NewServiceLogsListForbidden creates ServiceLogsListForbidden with default headers values
func NewServiceLogsListForbidden() *ServiceLogsListForbidden {

	return &ServiceLogsListForbidden{}
}

// WriteResponse to the client
func (o *ServiceLogsListForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// ServiceLogsListUnprocessableEntityCode is the HTTP code returned for type ServiceLogsListUnprocessableEntity
const ServiceLogsListUnprocessableEntityCode int = 422

/*ServiceLogsListUnprocessableEntity bad validation

swagger:response serviceLogsListUnprocessableEntity
*/
type ServiceLogsListUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceLogsListUnprocessableEntity creates ServiceLogsListUnprocessableEntity with default headers values
func NewServiceLogsListUnprocessableEntity() *ServiceLogsListUnprocessableEntity {

	return &ServiceLogsListUnprocessableEntity{}
}

// WithPayload adds the payload to the service logs list unprocessable entity response
func (o *ServiceLogsListUnprocessableEntity) WithPayload(payload *models.Error) *ServiceLogsListUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service logs list unprocessable entity response
func (o *ServiceLogsListUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceLogsListUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceLogsListServiceUnavailableCode is the HTTP code returned for type ServiceLogsListServiceUnavailable
const ServiceLogsListServiceUnavailableCode int = 503

/*ServiceLogsListServiceUnavailable internal server error

swagger:response serviceLogsListServiceUnavailable
*/
type ServiceLogsListServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceLogsListServiceUnavailable creates ServiceLogsListServiceUnavailable with default headers values
func NewServiceLogsListServiceUnavailable() *ServiceLogsListServiceUnavailable {

	return &ServiceLogsListServiceUnavailable{}
}

// WithPayload adds the payload to the service logs list service unavailable response
func (o *ServiceLogsListServiceUnavailable) WithPayload(payload *models.Error) *ServiceLogsListServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service logs list service unavailable response
func (o *ServiceLogsListServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceLogsListServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
