// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kuberlogic/kuberlogic/modules/dynamic-apiserver/pkg/generated/models"
)

// ServiceLogsReader is a Reader for the ServiceLogs structure.
type ServiceLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServiceLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServiceLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewServiceLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewServiceLogsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewServiceLogsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewServiceLogsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewServiceLogsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewServiceLogsOK creates a ServiceLogsOK with default headers values
func NewServiceLogsOK() *ServiceLogsOK {
	return &ServiceLogsOK{}
}

/* ServiceLogsOK describes a response with status code 200, with default header values.

kuberlogic service logs
*/
type ServiceLogsOK struct {
	Payload models.Logs
}

func (o *ServiceLogsOK) Error() string {
	return fmt.Sprintf("[GET /services/{ServiceID}/logs][%d] serviceLogsOK  %+v", 200, o.Payload)
}
func (o *ServiceLogsOK) GetPayload() models.Logs {
	return o.Payload
}

func (o *ServiceLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceLogsBadRequest creates a ServiceLogsBadRequest with default headers values
func NewServiceLogsBadRequest() *ServiceLogsBadRequest {
	return &ServiceLogsBadRequest{}
}

/* ServiceLogsBadRequest describes a response with status code 400, with default header values.

bad input parameter
*/
type ServiceLogsBadRequest struct {
	Payload *models.Error
}

func (o *ServiceLogsBadRequest) Error() string {
	return fmt.Sprintf("[GET /services/{ServiceID}/logs][%d] serviceLogsBadRequest  %+v", 400, o.Payload)
}
func (o *ServiceLogsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceLogsUnauthorized creates a ServiceLogsUnauthorized with default headers values
func NewServiceLogsUnauthorized() *ServiceLogsUnauthorized {
	return &ServiceLogsUnauthorized{}
}

/* ServiceLogsUnauthorized describes a response with status code 401, with default header values.

bad authentication
*/
type ServiceLogsUnauthorized struct {
}

func (o *ServiceLogsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /services/{ServiceID}/logs][%d] serviceLogsUnauthorized ", 401)
}

func (o *ServiceLogsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewServiceLogsForbidden creates a ServiceLogsForbidden with default headers values
func NewServiceLogsForbidden() *ServiceLogsForbidden {
	return &ServiceLogsForbidden{}
}

/* ServiceLogsForbidden describes a response with status code 403, with default header values.

bad permissions
*/
type ServiceLogsForbidden struct {
}

func (o *ServiceLogsForbidden) Error() string {
	return fmt.Sprintf("[GET /services/{ServiceID}/logs][%d] serviceLogsForbidden ", 403)
}

func (o *ServiceLogsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewServiceLogsUnprocessableEntity creates a ServiceLogsUnprocessableEntity with default headers values
func NewServiceLogsUnprocessableEntity() *ServiceLogsUnprocessableEntity {
	return &ServiceLogsUnprocessableEntity{}
}

/* ServiceLogsUnprocessableEntity describes a response with status code 422, with default header values.

bad validation
*/
type ServiceLogsUnprocessableEntity struct {
	Payload *models.Error
}

func (o *ServiceLogsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /services/{ServiceID}/logs][%d] serviceLogsUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *ServiceLogsUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceLogsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceLogsServiceUnavailable creates a ServiceLogsServiceUnavailable with default headers values
func NewServiceLogsServiceUnavailable() *ServiceLogsServiceUnavailable {
	return &ServiceLogsServiceUnavailable{}
}

/* ServiceLogsServiceUnavailable describes a response with status code 503, with default header values.

internal server error
*/
type ServiceLogsServiceUnavailable struct {
	Payload *models.Error
}

func (o *ServiceLogsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /services/{ServiceID}/logs][%d] serviceLogsServiceUnavailable  %+v", 503, o.Payload)
}
func (o *ServiceLogsServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceLogsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
