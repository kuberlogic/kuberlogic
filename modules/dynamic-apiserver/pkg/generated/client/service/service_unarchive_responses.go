// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kuberlogic/kuberlogic/modules/dynamic-apiserver/pkg/generated/models"
)

// ServiceUnarchiveReader is a Reader for the ServiceUnarchive structure.
type ServiceUnarchiveReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServiceUnarchiveReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServiceUnarchiveOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewServiceUnarchiveBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewServiceUnarchiveUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewServiceUnarchiveForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewServiceUnarchiveNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewServiceUnarchiveUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewServiceUnarchiveServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewServiceUnarchiveOK creates a ServiceUnarchiveOK with default headers values
func NewServiceUnarchiveOK() *ServiceUnarchiveOK {
	return &ServiceUnarchiveOK{}
}

/* ServiceUnarchiveOK describes a response with status code 200, with default header values.

service request to unarchive is sent
*/
type ServiceUnarchiveOK struct {
}

func (o *ServiceUnarchiveOK) Error() string {
	return fmt.Sprintf("[POST /services/{ServiceID}/unarchive][%d] serviceUnarchiveOK ", 200)
}

func (o *ServiceUnarchiveOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewServiceUnarchiveBadRequest creates a ServiceUnarchiveBadRequest with default headers values
func NewServiceUnarchiveBadRequest() *ServiceUnarchiveBadRequest {
	return &ServiceUnarchiveBadRequest{}
}

/* ServiceUnarchiveBadRequest describes a response with status code 400, with default header values.

invalid input
*/
type ServiceUnarchiveBadRequest struct {
	Payload *models.Error
}

func (o *ServiceUnarchiveBadRequest) Error() string {
	return fmt.Sprintf("[POST /services/{ServiceID}/unarchive][%d] serviceUnarchiveBadRequest  %+v", 400, o.Payload)
}
func (o *ServiceUnarchiveBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceUnarchiveBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceUnarchiveUnauthorized creates a ServiceUnarchiveUnauthorized with default headers values
func NewServiceUnarchiveUnauthorized() *ServiceUnarchiveUnauthorized {
	return &ServiceUnarchiveUnauthorized{}
}

/* ServiceUnarchiveUnauthorized describes a response with status code 401, with default header values.

bad authentication
*/
type ServiceUnarchiveUnauthorized struct {
}

func (o *ServiceUnarchiveUnauthorized) Error() string {
	return fmt.Sprintf("[POST /services/{ServiceID}/unarchive][%d] serviceUnarchiveUnauthorized ", 401)
}

func (o *ServiceUnarchiveUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewServiceUnarchiveForbidden creates a ServiceUnarchiveForbidden with default headers values
func NewServiceUnarchiveForbidden() *ServiceUnarchiveForbidden {
	return &ServiceUnarchiveForbidden{}
}

/* ServiceUnarchiveForbidden describes a response with status code 403, with default header values.

bad permissions
*/
type ServiceUnarchiveForbidden struct {
}

func (o *ServiceUnarchiveForbidden) Error() string {
	return fmt.Sprintf("[POST /services/{ServiceID}/unarchive][%d] serviceUnarchiveForbidden ", 403)
}

func (o *ServiceUnarchiveForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewServiceUnarchiveNotFound creates a ServiceUnarchiveNotFound with default headers values
func NewServiceUnarchiveNotFound() *ServiceUnarchiveNotFound {
	return &ServiceUnarchiveNotFound{}
}

/* ServiceUnarchiveNotFound describes a response with status code 404, with default header values.

service not found
*/
type ServiceUnarchiveNotFound struct {
	Payload *models.Error
}

func (o *ServiceUnarchiveNotFound) Error() string {
	return fmt.Sprintf("[POST /services/{ServiceID}/unarchive][%d] serviceUnarchiveNotFound  %+v", 404, o.Payload)
}
func (o *ServiceUnarchiveNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceUnarchiveNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceUnarchiveUnprocessableEntity creates a ServiceUnarchiveUnprocessableEntity with default headers values
func NewServiceUnarchiveUnprocessableEntity() *ServiceUnarchiveUnprocessableEntity {
	return &ServiceUnarchiveUnprocessableEntity{}
}

/* ServiceUnarchiveUnprocessableEntity describes a response with status code 422, with default header values.

bad validation
*/
type ServiceUnarchiveUnprocessableEntity struct {
}

func (o *ServiceUnarchiveUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /services/{ServiceID}/unarchive][%d] serviceUnarchiveUnprocessableEntity ", 422)
}

func (o *ServiceUnarchiveUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewServiceUnarchiveServiceUnavailable creates a ServiceUnarchiveServiceUnavailable with default headers values
func NewServiceUnarchiveServiceUnavailable() *ServiceUnarchiveServiceUnavailable {
	return &ServiceUnarchiveServiceUnavailable{}
}

/* ServiceUnarchiveServiceUnavailable describes a response with status code 503, with default header values.

internal service error
*/
type ServiceUnarchiveServiceUnavailable struct {
	Payload *models.Error
}

func (o *ServiceUnarchiveServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /services/{ServiceID}/unarchive][%d] serviceUnarchiveServiceUnavailable  %+v", 503, o.Payload)
}
func (o *ServiceUnarchiveServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceUnarchiveServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
