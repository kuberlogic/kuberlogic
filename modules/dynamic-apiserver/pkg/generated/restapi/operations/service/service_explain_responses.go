// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kuberlogic/kuberlogic/modules/dynamic-apiserver/pkg/generated/models"
)

// ServiceExplainOKCode is the HTTP code returned for type ServiceExplainOK
const ServiceExplainOKCode int = 200

/*ServiceExplainOK kuberlogic service explain

swagger:response serviceExplainOK
*/
type ServiceExplainOK struct {

	/*
	  In: Body
	*/
	Payload *models.Explain `json:"body,omitempty"`
}

// NewServiceExplainOK creates ServiceExplainOK with default headers values
func NewServiceExplainOK() *ServiceExplainOK {

	return &ServiceExplainOK{}
}

// WithPayload adds the payload to the service explain o k response
func (o *ServiceExplainOK) WithPayload(payload *models.Explain) *ServiceExplainOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service explain o k response
func (o *ServiceExplainOK) SetPayload(payload *models.Explain) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceExplainOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceExplainBadRequestCode is the HTTP code returned for type ServiceExplainBadRequest
const ServiceExplainBadRequestCode int = 400

/*ServiceExplainBadRequest bad input parameter

swagger:response serviceExplainBadRequest
*/
type ServiceExplainBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceExplainBadRequest creates ServiceExplainBadRequest with default headers values
func NewServiceExplainBadRequest() *ServiceExplainBadRequest {

	return &ServiceExplainBadRequest{}
}

// WithPayload adds the payload to the service explain bad request response
func (o *ServiceExplainBadRequest) WithPayload(payload *models.Error) *ServiceExplainBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service explain bad request response
func (o *ServiceExplainBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceExplainBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceExplainUnauthorizedCode is the HTTP code returned for type ServiceExplainUnauthorized
const ServiceExplainUnauthorizedCode int = 401

/*ServiceExplainUnauthorized bad authentication

swagger:response serviceExplainUnauthorized
*/
type ServiceExplainUnauthorized struct {
}

// NewServiceExplainUnauthorized creates ServiceExplainUnauthorized with default headers values
func NewServiceExplainUnauthorized() *ServiceExplainUnauthorized {

	return &ServiceExplainUnauthorized{}
}

// WriteResponse to the client
func (o *ServiceExplainUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// ServiceExplainForbiddenCode is the HTTP code returned for type ServiceExplainForbidden
const ServiceExplainForbiddenCode int = 403

/*ServiceExplainForbidden bad permissions

swagger:response serviceExplainForbidden
*/
type ServiceExplainForbidden struct {
}

// NewServiceExplainForbidden creates ServiceExplainForbidden with default headers values
func NewServiceExplainForbidden() *ServiceExplainForbidden {

	return &ServiceExplainForbidden{}
}

// WriteResponse to the client
func (o *ServiceExplainForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// ServiceExplainUnprocessableEntityCode is the HTTP code returned for type ServiceExplainUnprocessableEntity
const ServiceExplainUnprocessableEntityCode int = 422

/*ServiceExplainUnprocessableEntity bad validation

swagger:response serviceExplainUnprocessableEntity
*/
type ServiceExplainUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceExplainUnprocessableEntity creates ServiceExplainUnprocessableEntity with default headers values
func NewServiceExplainUnprocessableEntity() *ServiceExplainUnprocessableEntity {

	return &ServiceExplainUnprocessableEntity{}
}

// WithPayload adds the payload to the service explain unprocessable entity response
func (o *ServiceExplainUnprocessableEntity) WithPayload(payload *models.Error) *ServiceExplainUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service explain unprocessable entity response
func (o *ServiceExplainUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceExplainUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceExplainServiceUnavailableCode is the HTTP code returned for type ServiceExplainServiceUnavailable
const ServiceExplainServiceUnavailableCode int = 503

/*ServiceExplainServiceUnavailable internal server error

swagger:response serviceExplainServiceUnavailable
*/
type ServiceExplainServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewServiceExplainServiceUnavailable creates ServiceExplainServiceUnavailable with default headers values
func NewServiceExplainServiceUnavailable() *ServiceExplainServiceUnavailable {

	return &ServiceExplainServiceUnavailable{}
}

// WithPayload adds the payload to the service explain service unavailable response
func (o *ServiceExplainServiceUnavailable) WithPayload(payload *models.Error) *ServiceExplainServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service explain service unavailable response
func (o *ServiceExplainServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceExplainServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
