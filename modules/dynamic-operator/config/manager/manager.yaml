apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      securityContext:
        runAsNonRoot: true
      volumes:
        - name: compose-file
          configMap:
            name: compose-file
      containers:
        - command:
            - /manager
          volumeMounts:
            - name: compose-file
              mountPath: /etc/compose-file
          env:
            - name: PLUGINS
              value: "{docker-compose,/docker-compose-plugin}"
            - name: KL_PLUGIN_DOCKER_COMPOSE_FILE
              value: "/etc/compose-file/docker-compose.yaml"
          args:
            - --leader-elect
          image: controller:latest
          name: manager
          securityContext:
            allowPrivilegeEscalation: false
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          # TODO(user): Configure the resources accordingly based on the project requirements.
          # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
        - command:
            - /cmd
          args:
            - --scheme=http
          image: apiserver:latest
          name: apiserver
          env:
            - name: KUBERLOGIC_APISERVER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: apiserver-token
                  key: token

          ports:
            - containerPort: 8001
          resources:
            limits:
              cpu: 100m
              memory: 30Mi
            requests:
              cpu: 100m
              memory: 20Mi
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
