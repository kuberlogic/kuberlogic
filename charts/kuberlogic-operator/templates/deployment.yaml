apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "operator.fullname" . }}
  labels:
    {{- include "operator.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{ if .Values.monitoringScrapeAnnotation }}
        {{ .Values.monitoringScrapeAnnotation | quote | nindent 8 }}: "true"
        {{ .Values.monitoringScrapeSchemeAnnotation | quote | nindent 8 }}: "https"
        {{ .Values.monitoringScrapePortAnnotation | quote | nindent 8 }}: {{ .Values.monitoring.externalPort | quote }}
        {{ .Values.monitoringScrapePathAnnotation | quote | nindent 8 }}: "/metrics"
        {{ end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "operator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml . | nindent 8 }}
      {{ end }}
      serviceAccountName: {{ include "operator.serviceAccountName" . }}
      containers:
        - name: manager
          args:
            - --metrics-addr=127.0.0.1:{{ .Values.monitoring.internalPort }}
            - --enable-leader-election
          env:
          - name: PLATFORM
            value: "{{ .Values.config.platform | upper }}"
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: IMG_REPO
            value: {{ .Values.image.repository }}
          {{- with .Values.imagePullSecrets }}
          {{- with . | first }}
          - name: IMG_PULL_SECRET
            value: {{ .name }}
          {{- end }}
          {{- end }}
          - name: SENTRY_DSN
            value: {{ .Values.sentryDsn }}
          - name: GRAFANA_ENABLED
            value: "{{ .Values.config.grafana.enabled }}"
          {{ if .Values.config.grafana.enabled }}
          - name: GRAFANA_ENDPOINT
            value: "{{ .Values.config.grafana.endpoint }}"
          - name: GRAFANA_LOGIN
            valueFrom:
              secretKeyRef:
                key: "USER"
                name: {{ .Values.config.grafana.secret }}
          - name: GRAFANA_PASSWORD
            valueFrom:
              secretKeyRef:
                key: "PASSWORD"
                name: {{ .Values.config.grafana.secret }}
          - name: GRAFANA_DEFAULT_DATASOURCE_ENDPOINT
            value: {{ .Values.config.grafana.defaultDatasourceEndpoint }}
          {{ end }}
          {{ with .Values.config.smtp }}
          - name: NOTIFICATION_CHANNELS_EMAIL_ENABLED
            value: {{ .enabled | quote }}
          - name: NOTIFICATION_CHANNELS_EMAIL_HOST
            value: {{ .host | quote }}
          - name: NOTIFICATION_CHANNELS_EMAIL_PORT
            value: {{ .port | quote }}
          - name: NOTIFICATION_CHANNELS_EMAIL_USERNAME
            value: {{ .username | quote }}
          - name: NOTIFICATION_CHANNELS_EMAIL_PASSWORD
            value: {{ .password | quote }}
          - name: NOTIFICATION_CHANNELS_EMAIL_FROM
            value: {{ .from | quote }}
          {{ with .tls }}
          - name: NOTIFICATION_CHANNELS_EMAIL_TLS_INSECURE
            value: {{ .insecure | quote }}
          - name: NOTIFICATION_CHANNELS_EMAIL_TLS_ENABLED
            value: {{ .enabled | quote }}
          {{ end }}
          {{ end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: monitoring
              containerPort: {{ .Values.monitoring.internalPort }}
              protocol: TCP
          {{- if .Values.webhook.enabled }}
            - name: webhook
              containerPort: {{ .Values.webhook.port }}
              protocol: TCP
          {{ end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{ if .Values.webhook.enabled }}
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
          {{ end }}
        - args:
            - --secure-listen-address=0.0.0.0:{{ .Values.monitoring.externalPort }}
            - --upstream=http://127.0.0.1:{{ .Values.monitoring.internalPort }}/
            - --logtostderr=true
            - --v=10
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
          name: kube-rbac-proxy
          ports:
            - containerPort: {{ .Values.monitoring.externalPort }}
              name: https
      {{ if .Values.webhook.enabled }}
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ .Values.webhook.cert.secretName }}
      {{ end }}
      terminationGracePeriodSeconds: 10