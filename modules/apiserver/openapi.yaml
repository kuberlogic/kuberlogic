swagger: "2.0"
info:
  description: This is a service API
  version: 1.0.0
  title: service API
  contact:
    email: infra@cloudlinux.com

tags:
  - name: service
    description: Everything about service resource
  - name: auth
    description: Everything about authentication/authorization

host: localhost:8001
basePath: /api/v1/
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /login:
    post:
      tags:
        - auth
      summary: login user
      operationId: loginUser
      description: |
        Login user and return access credentials
      parameters:
        - in: body
          name: userCredentials
          description: user credentials
          schema:
            $ref: "#/definitions/UserCredentials"
      responses:
        200:
          description: access token response
          schema:
            $ref: "#/definitions/AccessTokenResponse"
        400:
          description: bad input parameters
        401:
          description: bad authentication
        503:
          description: internal server error
  /services/:
    get:
      x-permission: service:list
      x-posthog: { }
      tags:
        - service
      summary: searches service
      operationId: serviceList
      description: |
        List of service objects
      security:
        - Bearer: [ ]
      responses:
        200:
          description: search results matching criteria
          schema:
            $ref: "#/definitions/Services"
        400:
          description: bad input parameter
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"
    post:
      x-permission: service:add
      x-posthog:
        - key: type
          value: ServiceItem.Type
        - key: replicas
          value: ServiceItem.Replicas
          condition: params.ServiceItem.Replicas != nil
        - key: cpu-limit
          value: ServiceItem.Limits.CPU
          condition: params.ServiceItem.Limits != nil && params.ServiceItem.Limits.CPU != nil
        - key: memory-limit
          value: ServiceItem.Limits.Memory
          condition: params.ServiceItem.Limits != nil && params.ServiceItem.Limits.Memory != nil
        - key: volume-limit
          value: ServiceItem.Limits.VolumeSize
          condition: params.ServiceItem.Limits != nil && params.ServiceItem.Limits.VolumeSize != nil
      tags:
        - service
      summary: adds a service item
      operationId: serviceAdd
      description: |
        Adds service object
      parameters:
        - $ref: "#/parameters/ServiceItem"
      security:
        - Bearer: [ ]
      responses:
        201:
          description: item created
          schema:
            $ref: "#/definitions/Service"
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        409:
          description: item already exists
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"
  /services/{ServiceID}/:
    get:
      x-permission: service:get
      x-posthog:
        - key: service-id
          value: ServiceID
      tags:
        - service
      summary: get service by ID
      operationId: serviceGet
      description: |
        Receives full information about the service
      parameters:
        - $ref: "#/parameters/ServiceID"
      security:
        - Bearer: [ ]
      responses:
        200:
          description: search results matching criteria
          schema:
            $ref: "#/definitions/Service"
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        404:
          description: item not found
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"
    put:
      x-permission: service:edit
      x-posthog:
        - key: service-id
          value: ServiceID
        - key: type
          value: ServiceItem.Type
        - key: replicas
          value: ServiceItem.Replicas
          condition: params.ServiceItem.Replicas != nil
        - key: cpu-limit
          value: ServiceItem.Limits.CPU
          condition: params.ServiceItem.Limits != nil && params.ServiceItem.Limits.CPU != nil
        - key: memory-limit
          value: ServiceItem.Limits.Memory
          condition: params.ServiceItem.Limits != nil && params.ServiceItem.Limits.Memory != nil
        - key: volume-limit
          value: ServiceItem.Limits.VolumeSize
          condition: params.ServiceItem.Limits != nil && params.ServiceItem.Limits.VolumeSize != nil
      tags:
        - service
      summary: edit a service item
      operationId: serviceEdit
      description: |
        Edit service object
      parameters:
        - $ref: "#/parameters/ServiceID"
        - $ref: "#/parameters/ServiceItem"
      security:
        - Bearer: [ ]
      responses:
        200:
          description: item edited
          schema:
            $ref: "#/definitions/Service"
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        404:
          description: item not found
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"
    delete:
      x-permission: service:delete
      x-posthog:
        - key: service-id
          value: ServiceID
      tags:
        - service
      summary: deletes a service item
      operationId: serviceDelete
      description: |
        Deletes a service object
      parameters:
        - $ref: "#/parameters/ServiceID"
      security:
        - Bearer: [ ]
      responses:
        200:
          description: item deleted
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        404:
          description: item not found
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"

  /services/{ServiceID}/backup-config:
    get:
      x-permission: service:backup-config:get
      x-posthog:
        - key: service-id
          value: ServiceID
      tags:
        - service
      summary: show backup config
      operationId: backupConfigGet
      parameters:
        - $ref: "#/parameters/ServiceID"
      security:
        - Bearer: [ ]
      responses:
        200:
          description: return backup config
          schema:
            $ref: "#/definitions/BackupConfig"
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        404:
          description: item not found
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"
    post:
      x-permission: service:backup-config:add
      x-posthog:
        - key: service-id
          value: ServiceID
        - key: enabled
          value: BackupConfig.Enabled
        - key: schedule
          value: BackupConfig.Schedule
        - key: bucket
          value: BackupConfig.Bucket
        - key: endpoint
          value: BackupConfig.Endpoint
      tags:
        - service
      operationId: backupConfigCreate
      parameters:
        - $ref: "#/parameters/ServiceID"
        - in: body
          name: BackupConfig
          required: true
          description: Backup credential item to create
          schema:
            $ref: "#/definitions/BackupConfig"
      security:
        - Bearer: [ ]
      responses:
        201:
          description: item created
          schema:
            $ref: "#/definitions/BackupConfig"
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        409:
          description: item already exists
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"

    put:
      x-permission: service:backup-config:edit
      x-posthog:
        - key: service-id
          value: ServiceID
        - key: enabled
          value: BackupConfig.Enabled
        - key: schedule
          value: BackupConfig.Schedule
        - key: bucket
          value: BackupConfig.Bucket
        - key: endpoint
          value: BackupConfig.Endpoint
      tags:
        - service
      operationId: backupConfigEdit
      parameters:
        - $ref: "#/parameters/ServiceID"
        - in: body
          name: BackupConfig
          required: true
          description: Backup credential item to edit
          schema:
            $ref: "#/definitions/BackupConfig"
      security:
        - Bearer: [ ]
      responses:
        200:
          description: item is edited
          schema:
            $ref: "#/definitions/BackupConfig"
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        404:
          description: item not found
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"

    delete:
      x-permission: service:backup-config:delete
      x-posthog:
        - key: service-id
          value: ServiceID
      tags:
        - service
      operationId: backupConfigDelete
      parameters:
        - $ref: "#/parameters/ServiceID"
      security:
        - Bearer: [ ]
      responses:
        200:
          description: item is deleted
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        404:
          description: item not found
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"

  /services/{ServiceID}/backups/:
    get:
      x-permission: service:backup:list
      x-posthog:
        - key: service-id
          value: ServiceID
      tags:
        - service
      operationId: backupList
      parameters:
        - $ref: "#/parameters/ServiceID"
      security:
        - Bearer: [ ]
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: "#/definitions/Backup"
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        404:
          description: item not found
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"

  /services/{ServiceID}/logs:
    get:
      x-permission: service:logs
      x-posthog:
        - key: service-id
          value: ServiceID
        - key: service-instance
          value: ServiceInstance
        - key: tail
          value: Tail
      tags:
        - service
      operationId: logsGet
      parameters:
        - $ref: "#/parameters/ServiceID"
        - name: service_instance
          in: query
          description: "ServiceInstance to get logs of"
          required: true
          type: string
          pattern: '^\S+$'
        - name: tail
          in: query
          description: "number of lines to tail"
          required: false
          type: integer
          default: 100
      security:
        - Bearer: [ ]
      responses:
        200:
          description: service node logs
          schema:
            $ref: "#/definitions/Log"
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"

  /services/{ServiceID}/users/:
    get:
      x-permission: service:user:list
      x-posthog:
        - key: service-id
          value: ServiceID
      tags:
        - service
      operationId: userList
      parameters:
        - $ref: "#/parameters/ServiceID"
      security:
        - Bearer: [ ]
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"
    post:
      x-permission: service:user:add
      x-posthog:
        - key: service-id
          value: ServiceID
        - key: user
          value: User.Name
      tags:
        - service
      operationId: userCreate
      parameters:
        - $ref: "#/parameters/ServiceID"
        - in: body
          name: user
          required: true
          description: item to create
          schema:
            $ref: "#/definitions/User"
      security:
        - Bearer: [ ]
      responses:
        201:
          description: item is created
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"

  /services/{ServiceID}/users/{Username}/:
    put:
      x-permission: service:user:edit
      x-posthog:
        - key: service-id
          value: ServiceID
        - key: user
          value: User.Name
      tags:
        - service
      operationId: userEdit
      parameters:
        - $ref: "#/parameters/ServiceID"
        - in: path
          name: "Username"
          required: true
          description: username to edit
          type: string
        - in: body
          name: user
          required: true
          description: item to edit
          schema:
            $ref: "#/definitions/User"
      security:
        - Bearer: [ ]
      responses:
        200:
          description: item is edited
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        409:
          description: item already exists
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"
    delete:
      x-permission: service:user:delete
      x-posthog:
        - key: service-id
          value: ServiceID
        - key: user
          value: Username
      tags:
        - service
      operationId: userDelete
      parameters:
        - $ref: "#/parameters/ServiceID"
        - in: path
          name: "Username"
          required: true
          description: username to edit
          type: string
      security:
        - Bearer: [ ]
      responses:
        200:
          description: item is deleted
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        409:
          description: item already exists
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"
  /services/{ServiceID}/databases/:
    get:
      x-permission: service:database:list
      x-posthog:
        - key: service-id
          value: ServiceID
      tags:
        - service
      operationId: databaseList
      parameters:
        - $ref: "#/parameters/ServiceID"
      security:
        - Bearer: [ ]
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: "#/definitions/Database"
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"
    post:
      x-permission: service:database:add
      x-posthog:
        - key: service-id
          value: ServiceID
        - key: database
          value: Database.Name
      tags:
        - service
      operationId: databaseCreate
      parameters:
        - $ref: "#/parameters/ServiceID"
        - in: body
          name: database
          required: true
          description: item to create
          schema:
            $ref: "#/definitions/Database"
      security:
        - Bearer: [ ]
      responses:
        201:
          description: item is created
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        404:
          description: item not found
        409:
          description: item already exists
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"
  /services/{ServiceID}/databases/{Database}/:
    delete:
      x-permission: service:database:delete
      x-posthog:
        - key: service-id
          value: ServiceID
        - key: database
          value: Database
      tags:
        - service
      operationId: databaseDelete
      parameters:
        - $ref: "#/parameters/ServiceID"
        - in: path
          name: "Database"
          required: true
          description: item to delete
          type: string
      security:
        - Bearer: [ ]
      responses:
        200:
          description: item is deleted
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        404:
          description: item not found
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"
  /services/{ServiceID}/restores:
    post:
      x-permission: service:backup-restore:add
      x-posthog:
        - key: service-id
          value: ServiceID
        - key: key
          value: RestoreItem.Key
        - key: database
          value: RestoreItem.Database
      tags:
        - service
      operationId: databaseRestore
      parameters:
        - $ref: "#/parameters/ServiceID"
        - in: body
          name: restoreItem
          required: true
          description: items to restore
          schema:
            type: object
            required:
              - key
              - database
            properties:
              key:
                type: string
              database:
                type: string

      security:
        - Bearer: [ ]
      responses:
        200:
          description: item is restored
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        404:
          description: item not found
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"

    get:
      x-permission: service:restore:list
      x-posthog:
        - key: service-id
          value: ServiceID
      tags:
        - service
      operationId: restoreList
      parameters:
        - $ref: "#/parameters/ServiceID"
      security:
        - Bearer: [ ]
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: "#/definitions/Restore"
        400:
          description: invalid input, object invalid
          schema:
            $ref: "#/definitions/Error"
        401:
          description: bad authentication
        403:
          description: bad permissions
        404:
          description: item not found
        503:
          description: internal server error
          schema:
            $ref: "#/definitions/Error"

definitions:
  Backup:
    type: object
    required:
      - file
      - size
      - lastModified
    properties:
      file:
        type: string
      size:
        type: integer
      lastModified:
        type: string
        format: date-time

  Restore:
    type: object
    required:
      - file
      - database
      - time
      - status
    properties:
      file:
        type: string
      database:
        type: string
      time:
        type: string
        format: date-time
      status:
        format: string

  Log:
    type: object
    properties:
      lines:
        type: integer
      body:
        type: string

  AdvancedConf:
    type: object
    additionalProperties:
      type: string

  MaintenanceWindow:
    type: object
    required:
      - day
      - startHour
    properties:
      day:
        type: string
        enum:
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          - Sunday
      startHour:
        type: integer
        minimum: 0
        maximum: 11

  Connection:
    type: object
    properties:
      host:
        type: string
      port:
        type: integer
      user:
        type: string
      password:
        type: string
      ssl_mode:
        type: string
      cert:
        type: string

  Limits:
    type: object
    required:
      - cpu
      - memory
      - volumeSize
    properties:
      cpu:
        type: string
        pattern: "^([0-9]+$)|([0-9]+.[0-9]+$)"
        # cpu is measured in # of cores: 1, 1.5, 2, etc

      memory:
        type: string
        pattern: "^([0-9]+$)|([0-9]+.[0-9]+$)"
        # memory is measured in Gi
        # 1.5, 1, 2, 0.5

      volumeSize:
        type: string
        pattern: "^([0-9]+$)|([0-9]+.[0-9]+$)"
        # disk is measured in Gi
        # 1, 1.5, 1, 2

  Service:
    type: object
    required:
      - name
      - type
    properties:
      name:
        type: string
        pattern: "[a-z0-9]([-a-z0-9]*[a-z0-9])?"
        minLength: 2
        maxLength: 20
      ns:
        type: string
        pattern: "[a-z0-9]([-a-z0-9]*[a-z0-9])?"
        maxLength: 33
        minLength: 2
      type:
        type: string
        enum:
          - postgresql
          - mysql
      version:
        type: string
      internalConnection:
        type: object
        readOnly: true
        properties:
          master:
            $ref: "#/definitions/Connection"
          replica:
            $ref: "#/definitions/Connection"
      externalConnection:
        type: object
        readOnly: true
        properties:
          master:
            $ref: "#/definitions/Connection"
          replica:
            $ref: "#/definitions/Connection"

      masters:
        type: integer
        readOnly: true
      replicas:
        # https://goswagger.io/faq/faq_model.html#non-required-or-nullable-property
        x-nullable: true
        type: integer
      instances:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/ServiceInstance'

      maintenanceWindow:
        $ref: "#/definitions/MaintenanceWindow"

      limits:
        $ref: "#/definitions/Limits"

      advancedConf:
        $ref: "#/definitions/AdvancedConf"

      status:
        type: string
        readOnly: true

      created_at:
        type: string
        readOnly: true
        format: date-time

  ServiceInstance:
    type: object
    properties:
      name:
        type: string
      role:
        type: string
      status:
        type: object
        $ref: '#/definitions/ServiceInstanceStatus'

  ServiceInstanceStatus:
    type: object
    properties:
      status:
        type: string
        enum:
          - Running
          - Failed
          - Pending

  User:
    type: object
    required:
      - name
    properties:
      name:
        type: string
      password:
        type: string

  Database:
    type: object
    required:
      - name
    properties:
      name:
        type: string

  Services:
    type: array
    items:
      $ref: "#/definitions/Service"

  BackupConfig:
    type: object
    required:
      - enabled
      - aws_access_key_id
      - aws_secret_access_key
      - bucket
      - endpoint
      - schedule
    properties:
      enabled:
        type: boolean
      aws_access_key_id:
        type: string
      aws_secret_access_key:
        type: string
      bucket:
        type: string
      endpoint:
        type: string
      schedule:
        type: string
      region:
        type: string

  UserCredentials:
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string

  AccessTokenResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      token_type:
        type: string
      refresh_token:
        type: string

  Principal:
    properties:
      email:
        type: string
      token:
        type: string
      namespace:
        type: string

  Error:
    type: object
    properties:
      message:
        type: string

parameters:
  ServiceID:
    name: ServiceID
    in: path
    description: service Resource ID
    required: true
    type: "string"
    pattern: "[a-z0-9]([-a-z0-9]*[a-z0-9])?:[a-z0-9]([-a-z0-9]*[a-z0-9])?"
    minLength: 3
    maxLength: 120

  ServiceItem:
    in: body
    name: serviceItem
    required: true
    description: service item
    schema:
      $ref: "#/definitions/Service"

securityDefinitions:
  Bearer:
    type: apiKey
    in: header
    name: Authorization

