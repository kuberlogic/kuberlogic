// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kuberlogic/kuberlogic/modules/dynamic-apiserver/pkg/generated/models"
)

// ServiceGetReader is a Reader for the ServiceGet structure.
type ServiceGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServiceGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServiceGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewServiceGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewServiceGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewServiceGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewServiceGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewServiceGetUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewServiceGetServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewServiceGetOK creates a ServiceGetOK with default headers values
func NewServiceGetOK() *ServiceGetOK {
	return &ServiceGetOK{}
}

/* ServiceGetOK describes a response with status code 200, with default header values.

item edited
*/
type ServiceGetOK struct {
	Payload *models.Service
}

func (o *ServiceGetOK) Error() string {
	return fmt.Sprintf("[GET /services/{ServiceID}/][%d] serviceGetOK  %+v", 200, o.Payload)
}
func (o *ServiceGetOK) GetPayload() *models.Service {
	return o.Payload
}

func (o *ServiceGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Service)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceGetBadRequest creates a ServiceGetBadRequest with default headers values
func NewServiceGetBadRequest() *ServiceGetBadRequest {
	return &ServiceGetBadRequest{}
}

/* ServiceGetBadRequest describes a response with status code 400, with default header values.

invalid input, object invalid
*/
type ServiceGetBadRequest struct {
	Payload *models.Error
}

func (o *ServiceGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /services/{ServiceID}/][%d] serviceGetBadRequest  %+v", 400, o.Payload)
}
func (o *ServiceGetBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceGetUnauthorized creates a ServiceGetUnauthorized with default headers values
func NewServiceGetUnauthorized() *ServiceGetUnauthorized {
	return &ServiceGetUnauthorized{}
}

/* ServiceGetUnauthorized describes a response with status code 401, with default header values.

bad authentication
*/
type ServiceGetUnauthorized struct {
}

func (o *ServiceGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /services/{ServiceID}/][%d] serviceGetUnauthorized ", 401)
}

func (o *ServiceGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewServiceGetForbidden creates a ServiceGetForbidden with default headers values
func NewServiceGetForbidden() *ServiceGetForbidden {
	return &ServiceGetForbidden{}
}

/* ServiceGetForbidden describes a response with status code 403, with default header values.

bad permissions
*/
type ServiceGetForbidden struct {
}

func (o *ServiceGetForbidden) Error() string {
	return fmt.Sprintf("[GET /services/{ServiceID}/][%d] serviceGetForbidden ", 403)
}

func (o *ServiceGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewServiceGetNotFound creates a ServiceGetNotFound with default headers values
func NewServiceGetNotFound() *ServiceGetNotFound {
	return &ServiceGetNotFound{}
}

/* ServiceGetNotFound describes a response with status code 404, with default header values.

item not found
*/
type ServiceGetNotFound struct {
	Payload *models.Error
}

func (o *ServiceGetNotFound) Error() string {
	return fmt.Sprintf("[GET /services/{ServiceID}/][%d] serviceGetNotFound  %+v", 404, o.Payload)
}
func (o *ServiceGetNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceGetUnprocessableEntity creates a ServiceGetUnprocessableEntity with default headers values
func NewServiceGetUnprocessableEntity() *ServiceGetUnprocessableEntity {
	return &ServiceGetUnprocessableEntity{}
}

/* ServiceGetUnprocessableEntity describes a response with status code 422, with default header values.

bad validation
*/
type ServiceGetUnprocessableEntity struct {
	Payload *models.Error
}

func (o *ServiceGetUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /services/{ServiceID}/][%d] serviceGetUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *ServiceGetUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceGetUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceGetServiceUnavailable creates a ServiceGetServiceUnavailable with default headers values
func NewServiceGetServiceUnavailable() *ServiceGetServiceUnavailable {
	return &ServiceGetServiceUnavailable{}
}

/* ServiceGetServiceUnavailable describes a response with status code 503, with default header values.

internal server error
*/
type ServiceGetServiceUnavailable struct {
	Payload *models.Error
}

func (o *ServiceGetServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /services/{ServiceID}/][%d] serviceGetServiceUnavailable  %+v", 503, o.Payload)
}
func (o *ServiceGetServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceGetServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
